# /// script
# requires-python = ">=3.12"
# dependencies = [
#     "marimo",
#     "matplotlib==3.10.6",
#     "missingno==0.5.2",
#     "pandas==2.3.2",
#     "polars==1.32.3",
#     "requests==2.32.5",
# ]
# ///

import marimo

__generated_with = "0.15.1"
app = marimo.App(auto_download=["html"])


@app.cell
def _():
    import marimo as mo
    return (mo,)


@app.cell(hide_code=True)
def _(mo):
    mo.md(
        r"""
    ## Open Government Data, provided by **Statistisches Amt des Kantons Basel-Stadt - DCC Data Competence Center**
    *Autogenerated Python starter code for dataset with identifier* **100388**
    """
    )
    return


@app.cell
def _(mo):
    mo.md(
        r"""
    ## Dataset
    # **Aktuelle Temperaturen der Gartenbäder**
    **Description**: <p style="font-family: sans-serif;">Dieser Datensatz enthält die aktuellen Wassertemperaturen in den Gartenbädern</p><p style="font-family: sans-serif;">Die Temperaturdaten werden alle 15 Minuten aktualisiert, indem ein automatisiertes Programm die neuesten Werte von der Webseite <a href="https://www.ed-baeder.ch/" target="_blank">https://www.ed-baeder.ch/</a> abruft. Auf dieser Webseite findet man auch sonstige Meldungen zu den Gartenbädern.</p><p style="font-family: sans-serif;">Falls ein Gartenbad geschlossen ist oder keine Temperaturmessung verfügbar ist, wird für diesen Zeitraum kein Wert im Datensatz vermerkt.</p><p style="font-family: sans-serif;"><span style="font-weight: bolder;">Weiterführende Links:</span></p><p style="font-family: sans-serif;">Weitere Informationen zu den Gartenbädern: <a href="https://www.bs.ch/themen/kultur-sport-und-freizeit/baeder-kunsteisbahnen-sportanlagen-und-raeume/gartenbaeder-basel" target="_blank">https://www.bs.ch/themen/kultur-sport-und-freizeit/baeder-kunsteisbahnen-sportanlagen-und-raeume/gartenbaeder-basel</a></p><p style="font-family: sans-serif;">Zeitreihe der Temperaturen der Gartenbäder als Datensatz: <a href="https://data.bs.ch/explore/dataset/100384/" target="_blank">https://data.bs.ch/explore/dataset/100384/</a></p><p style="font-family: sans-serif;">Diese und weitere Sportanlagen als Datensatz: <a href="https://data.bs.ch/explore/dataset/100151/" target="_blank">https://data.bs.ch/explore/dataset/100151/</a></p>

    *You can find the dataset [under this link](https://data.bs.ch/explore/dataset/100388)*.
    """
    )
    return


@app.cell(hide_code=True)
def _(mo):
    mo.md(
        r"""
    /// details | Metadata

    - **Dataset_identifier** `100388`
- **Title** `Aktuelle Temperaturen der Gartenbäder`
- **Description** `<p style="font-family: sans-serif;">Dieser Datensatz enthält die aktuellen Wassertemperaturen in den Gartenbädern</p><p style="font-family: sans-serif;">Die Temperaturdaten werden alle 15 Minuten aktualisiert, indem ein automatisiertes Programm die neuesten Werte von der Webseite <a href="https://www.ed-baeder.ch/" target="_blank">https://www.ed-baeder.ch/</a> abruft. Auf dieser Webseite findet man auch sonstige Meldungen zu den Gartenbädern.</p><p style="font-family: sans-serif;">Falls ein Gartenbad geschlossen ist oder keine Temperaturmessung verfügbar ist, wird für diesen Zeitraum kein Wert im Datensatz vermerkt.</p><p style="font-family: sans-serif;"><span style="font-weight: bolder;">Weiterführende Links:</span></p><p style="font-family: sans-serif;">Weitere Informationen zu den Gartenbädern: <a href="https://www.bs.ch/themen/kultur-sport-und-freizeit/baeder-kunsteisbahnen-sportanlagen-und-raeume/gartenbaeder-basel" target="_blank">https://www.bs.ch/themen/kultur-sport-und-freizeit/baeder-kunsteisbahnen-sportanlagen-und-raeume/gartenbaeder-basel</a></p><p style="font-family: sans-serif;">Zeitreihe der Temperaturen der Gartenbäder als Datensatz: <a href="https://data.bs.ch/explore/dataset/100384/" target="_blank">https://data.bs.ch/explore/dataset/100384/</a></p><p style="font-family: sans-serif;">Diese und weitere Sportanlagen als Datensatz: <a href="https://data.bs.ch/explore/dataset/100151/" target="_blank">https://data.bs.ch/explore/dataset/100151/</a></p>`
- **Contact_name** `Open Data Basel-Stadt`
- **Issued** `2024-08-16`
- **Modified** `2025-09-18T19:45:30+00:00`
- **Rights** `NonCommercialAllowed-CommercialAllowed-ReferenceRequired`
- **Temporal_coverage_start_date** `2025-09-17T22:00:00+00:00`
- **Temporal_coverage_end_date** `2025-09-17T22:00:00+00:00`
- **Themes** `['Kultur, Medien, Informationsgesellschaft, Sport', 'Tourismus']`
- **Keywords** `['Hallenbad', 'Familienbad', 'Sportbad', 'behindertengerecht', 'Schwimmzone', 'Schwimmen', 'Baden', 'OpenSportData', 'Live']`
- **Publisher** `Jugend, Familie und Sport`
- **Reference** `None`


    ///
    """
    )
    return


@app.cell
def _():
    import os
    import pandas as pd
    import requests
    import matplotlib.pyplot as plt
    return os, pd, plt, requests


@app.cell
def _(plt):
    plt.style.use("ggplot")

    params = {
        "text.color": (0.25, 0.25, 0.25),
        "figure.figsize": [18, 6],
    }

    plt.rcParams.update(params)
    return


@app.cell
def _(os, pd, requests):
    def get_dataset(dataset_id):
        url=f"https://data.bs.ch/explore/dataset/{dataset_id}/download"
        r = requests.get(
            url, 
            params={
                "format": "csv", 
                "timezone": "Europe%2FZurich"
            }
        )
        data_path = os.path.join(os.getcwd(), "..", "data")
        if not os.path.exists(data_path):
            os.makedirs(data_path)
        csv_path = os.path.join(data_path, f"{dataset_id}.csv")
        with open(csv_path, "wb") as f:
            f.write(r.content)
        data = pd.read_csv(
            url, sep=";", on_bad_lines="warn", encoding_errors="ignore", low_memory=False
        )
        # if dataframe only has one column or less the data is not ";" separated
        if data.shape[1] <= 1:
            print(
                "The data wasn't imported properly. Very likely the correct separator couldn't be found.\nPlease check the dataset manually and adjust the code."
            )
        return data
    return (get_dataset,)


@app.cell(hide_code=True)
def _(mo):
    mo.md(r"""## Load data""")
    return


@app.cell
def _(get_dataset):
    # Read the dataset
    df = get_dataset(dataset_id="100388")
    df
    return (df,)


@app.cell
def _(mo):
    mo.md(r"""## Analyze Data""")
    return


@app.cell
def _(df):
    # check missing values with missingno
    # https://github.com/ResidentMario/missingno
    import missingno as msno

    msno.matrix(df, labels=True, sort="descending")
    return


@app.cell
def _(df):
    df.info(memory_usage="deep", verbose=True)
    return


@app.cell
def _(df, pd, plt):
    # plot a histogram for each numerical feature
    try:
        df.hist(bins=25, rwidth=0.9)
        plt.tight_layout()
        plt.show()
    except pd.errors.DataError:
        print("No numerical data to plot.")
    return

@app.cell
def _(mo):
    mo.md(r"""**Questions about the data?** Open Data Basel-Stadt | opendata@bs.ch""")
    return

if __name__ == "__main__":
    app.run()
