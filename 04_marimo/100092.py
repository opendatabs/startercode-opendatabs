# /// script
# requires-python = ">=3.12"
# dependencies = [
#     "marimo",
#     "matplotlib==3.10.6",
#     "missingno==0.5.2",
#     "pandas==2.3.2",
#     "polars==1.32.3",
#     "requests==2.32.5",
# ]
# ///

import marimo

__generated_with = "0.15.1"
app = marimo.App(auto_download=["html"])


@app.cell
def _():
    import marimo as mo
    return (mo,)


@app.cell(hide_code=True)
def _(mo):
    mo.md(
        r"""
    ## Open Government Data, provided by **Statistisches Amt des Kantons Basel-Stadt - DCC Data Competence Center**
    *Autogenerated Python starter code for dataset with identifier* **100092**
    """
    )
    return


@app.cell(hide_code=True)
def _(mo):
    mo.md(
        r"""
    ## Dataset
    # **Geborene nach Geschlecht, Staatsangehörigkeit, Wohnviertel und Geburtsdatum**
    **Description**: Dieser Datensatz zeigt die Geborenen im Kanton Basel-Stadt nach Geschlecht, Staatsangehörigkeit, Wohnviertel und Geburtsdatum. Die Daten werden täglich aktualisiert, wobei nur Geburten berücksichtigt werden, die mindestens 15 Tage zurückliegen. Aufgrund von Nachmeldungen kann es jederzeit zu Änderungen bei bereits veröffentlichten Werten kommen. In den Daten des laufenden Jahres und bis ca. Juli auch in jenen des zurückliegenden Jahres sind ausser den Lebendgeborenen auch die Totgeborenen berücksichtigt, weil die Angabe zur Lebensfähigkeit jeweils erst im Juli des Folgejahres verfügbar ist. In weiter zurückliegenden Jahren sind nur die Lebendgeborenen berücksichtigt. Auch die Angabe zur Anzahl Kinder, die zusammen geboren wurden (Mehrlingsgeburten) ist jeweils erst ca. im Juli des Folgejahrs verfügbar. <br><br>Die hier veröffentlichten Werte können aus methodischen Gründen von denjenigen in der <a href="https://statistik.bs.ch/unterthema/3" target="_blank">kantonalen öffentlichen Statistik (https://statistik.bs.ch/unterthema/3)</a> abweichen: In Letzterer werden nachträglich gemeldete Geburten während vier Monaten gesammelt, danach gelten die Zahlen als definitiv. Später eintreffende Meldungen werden im letzten noch nicht abgeschlossenen Monat gezählt. In diesem Datensatz werden sie im Monat des Geburtsdatums gezählt.<br><br>Aus Gründen des Persönlichkeitsschutzes können im <a href="https://data.bs.ch/explore/dataset/100099/" target="_blank">monatlichen Datensatz (https://data.bs.ch/explore/dataset/100099/)</a> mehr Attribute veröffentlicht werden als im vorliegenden Datensatz.

    *You can find the dataset [under this link](https://data.bs.ch/explore/dataset/100092)*.
    """
    )
    return


@app.cell(hide_code=True)
def _(mo):
    mo.md(
        r"""
    /// details | Metadata

    - **Dataset_identifier** `100092`
- **Title** `Geborene nach Geschlecht, Staatsangehörigkeit, Wohnviertel und Geburtsdatum`
- **Description** `Dieser Datensatz zeigt die Geborenen im Kanton Basel-Stadt nach Geschlecht, Staatsangehörigkeit, Wohnviertel und Geburtsdatum. Die Daten werden täglich aktualisiert, wobei nur Geburten berücksichtigt werden, die mindestens 15 Tage zurückliegen. Aufgrund von Nachmeldungen kann es jederzeit zu Änderungen bei bereits veröffentlichten Werten kommen. In den Daten des laufenden Jahres und bis ca. Juli auch in jenen des zurückliegenden Jahres sind ausser den Lebendgeborenen auch die Totgeborenen berücksichtigt, weil die Angabe zur Lebensfähigkeit jeweils erst im Juli des Folgejahres verfügbar ist. In weiter zurückliegenden Jahren sind nur die Lebendgeborenen berücksichtigt. Auch die Angabe zur Anzahl Kinder, die zusammen geboren wurden (Mehrlingsgeburten) ist jeweils erst ca. im Juli des Folgejahrs verfügbar. <br><br>Die hier veröffentlichten Werte können aus methodischen Gründen von denjenigen in der <a href="https://statistik.bs.ch/unterthema/3" target="_blank">kantonalen öffentlichen Statistik (https://statistik.bs.ch/unterthema/3)</a> abweichen: In Letzterer werden nachträglich gemeldete Geburten während vier Monaten gesammelt, danach gelten die Zahlen als definitiv. Später eintreffende Meldungen werden im letzten noch nicht abgeschlossenen Monat gezählt. In diesem Datensatz werden sie im Monat des Geburtsdatums gezählt.<br><br>Aus Gründen des Persönlichkeitsschutzes können im <a href="https://data.bs.ch/explore/dataset/100099/" target="_blank">monatlichen Datensatz (https://data.bs.ch/explore/dataset/100099/)</a> mehr Attribute veröffentlicht werden als im vorliegenden Datensatz.`
- **Contact_name** `Open Data Basel-Stadt`
- **Issued** `2020-09-25`
- **Modified** `2025-10-15T01:16:12+00:00`
- **Rights** `NonCommercialAllowed-CommercialAllowed-ReferenceRequired`
- **Temporal_coverage_start_date** `None`
- **Temporal_coverage_end_date** `None`
- **Themes** `['Bevölkerung']`
- **Keywords** `['Nationalität', 'Alter', 'Zeitreihe', 'Demographie', 'Geburten', 'Neugeboren']`
- **Publisher** `Statistisches Amt`
- **Reference** `None`


    ///
    """
    )
    return


@app.cell
def _():
    import os
    import pandas as pd
    import requests
    import matplotlib.pyplot as plt
    return os, pd, plt, requests


@app.cell
def _(plt):
    plt.style.use("ggplot")

    params = {
        "text.color": (0.25, 0.25, 0.25),
        "figure.figsize": [18, 6],
    }

    plt.rcParams.update(params)
    return


@app.cell
def _(os, pd, requests):
    def get_dataset(dataset_id):
        url = f"https://data.bs.ch/api/explore/v2.1/catalog/datasets/{dataset_id}/exports/csv"
        r = requests.get(
            url, 
            params={
                "timezone": "Europe%2FZurich",
                "use_labels": "true"
            }
        )
        data_path = os.path.join(os.getcwd(), "..", "data")
        if not os.path.exists(data_path):
            os.makedirs(data_path)
        csv_path = os.path.join(data_path, f"{dataset_id}.csv")
        with open(csv_path, "wb") as f:
            f.write(r.content)
        data = pd.read_csv(
            url, sep=";", on_bad_lines="warn", encoding_errors="ignore", low_memory=False
        )
        # if dataframe only has one column or less the data is not ";" separated
        if data.shape[1] <= 1:
            print(
                "The data wasn't imported properly. Very likely the correct separator couldn't be found.\nPlease check the dataset manually and adjust the code."
            )
        return data
    return (get_dataset,)


@app.cell(hide_code=True)
def _(mo):
    mo.md(r"""## Load data""")
    return


@app.cell
def _(get_dataset):
    # Read the dataset
    df = get_dataset(dataset_id="100092")
    df
    return (df,)


@app.cell(hide_code=True)
def _(mo):
    mo.md(r"""## Analyze Data""")
    return


@app.cell
def _(df):
    # check missing values with missingno
    # https://github.com/ResidentMario/missingno
    import missingno as msno

    msno.matrix(df, labels=True, sort="descending")
    return


@app.cell
def _(df):
    df.info(memory_usage="deep", verbose=True)
    return


@app.cell
def _(df, pd, plt):
    # plot a histogram for each numerical feature
    try:
        df.hist(bins=25, rwidth=0.9)
        plt.tight_layout()
        plt.show()
    except ValueError:
        print("No numerical data to plot.")
    return

@app.cell(hide_code=True)
def _(mo):
    mo.md(r"""**Questions about the data?** Open Data Basel-Stadt | opendata@bs.ch""")
    return

if __name__ == "__main__":
    app.run()
